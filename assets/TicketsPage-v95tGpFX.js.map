{"version":3,"file":"TicketsPage-v95tGpFX.js","sources":["../../src/components/FilterField/FilterField.tsx","../../src/components/FilterSelect/FilterSelect.tsx","../../src/components/FilterRadios/FilterRadios.tsx","../../src/components/SortControl/SortControl.tsx","../../src/components/ProductsFilters/ProductsFilters.tsx","../../src/components/ProductCard/ProductCard.tsx","../../src/components/ProductGrid/ProductGrid.tsx","../../src/config.ts","../../src/hooks/useProducts.ts","../../src/hooks/useProductDetails.ts","../../src/components/ErrorDisplay/ErrorDisplay.tsx","../../src/utils/format.ts","../../src/components/ProductDetailsModal/ProductDetailsModal.tsx","../../src/pages/TicketsPage.tsx"],"sourcesContent":["import TextField from '@mui/material/TextField';\r\nimport React from 'react';\r\n\r\ninterface FilterFieldProps {\r\n  label: string;\r\n  value: string;\r\n  onChange: (v: string) => void;\r\n  type?: React.InputHTMLAttributes<unknown>['type'];\r\n}\r\n\r\nexport function FilterField({ label, value, onChange, type }: FilterFieldProps) {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      type={type}\r\n      size=\"small\"\r\n      fullWidth\r\n      value={value}\r\n      onChange={e => onChange(e.target.value)}\r\n      slotProps={{ inputLabel: { shrink: true } }}\r\n    />\r\n  );\r\n}\r\n","import FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\ninterface FilterSelectProps<T extends (string|number)> {\r\n  label: string;\r\n  value: T;\r\n  options: T[];\r\n  onChange: (v: T) => void;\r\n}\r\n\r\nexport function FilterSelect<T extends (string|number)>({\r\n  label, value, options, onChange\r\n}: FilterSelectProps<T>) {\r\n  return (\r\n    <FormControl size=\"small\" fullWidth>\r\n      <InputLabel>{label}</InputLabel>\r\n      <Select\r\n        label={label}\r\n        value={value}\r\n        onChange={e => onChange(e.target.value as T)}\r\n      >\r\n        {options.map(o => (\r\n          <MenuItem key={o} value={o}>{o}</MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Radio from '@mui/material/Radio';\r\n\r\ninterface FilterRadiosProps<T extends string> {\r\n  legend: string;\r\n  value: T;\r\n  options: { value: T; label: string }[];\r\n  onChange: (v: T) => void;\r\n}\r\n\r\nexport function FilterRadios<T extends string>({\r\n  legend, value, options, onChange\r\n}: FilterRadiosProps<T>) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">{legend}</FormLabel>\r\n      <RadioGroup\r\n        row\r\n        value={value}\r\n        onChange={(_, v) => onChange(v as T)}\r\n      >\r\n        {options.map(o => (\r\n          <FormControlLabel\r\n            key={o.value}\r\n            value={o.value}\r\n            control={<Radio size=\"small\" />}\r\n            label={o.label}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport type SortField = string;\r\nexport type SortOrder = 'asc' | 'desc';\r\n\r\ninterface SortControlProps<F extends SortField> {\r\n  /** liste des champs à trier */\r\n  fields: Array<{ value: F; label: React.ReactNode }>;\r\n  /** champ actuellement sélectionné */\r\n  sortBy: F;\r\n  /** ordre actuel */\r\n  order: SortOrder;\r\n  /** callback quand on change soit le champ, soit l’ordre */\r\n  onSortChange: (sortBy: F, order: SortOrder) => void;\r\n  label: String;\r\n}\r\n\r\nexport function SortControl<F extends SortField>({\r\n  fields,\r\n  sortBy,\r\n  order,\r\n  onSortChange,\r\n  label\r\n}: SortControlProps<F>) {\r\n  const { t } = useTranslation();\r\n  const handleField = (_: React.MouseEvent<HTMLElement>, newField: F) => {\r\n    if (newField) onSortChange(newField, order);\r\n  };\r\n  const handleOrder = (_: React.MouseEvent<HTMLElement>, newOrder: SortOrder) => {\r\n    if (newOrder) onSortChange(sortBy, newOrder);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" fullWidth>\r\n      <FormLabel component=\"legend\" sx={{ mb: 1 }}>\r\n        {label}\r\n      </FormLabel>\r\n      <Box sx={{ display: 'flex', gap: 1 }}>\r\n        {/* Groupe Champs (personnalisable) */}\r\n        <ToggleButtonGroup\r\n          value={sortBy}\r\n          exclusive\r\n          size=\"small\"\r\n          onChange={handleField}\r\n          aria-label={t('sorting.title')}\r\n          sx={{ flex: 1 }}\r\n        >\r\n          {fields.map(({ value, label }) => (\r\n            <ToggleButton key={value} value={value} aria-label={String(value)}>\r\n              {label}\r\n            </ToggleButton>\r\n          ))}\r\n        </ToggleButtonGroup>\r\n\r\n        {/* Groupe Ordre (toujours le même) */}\r\n        <ToggleButtonGroup\r\n          value={order}\r\n          exclusive\r\n          size=\"small\"\r\n          onChange={handleOrder}\r\n          aria-label={t('sorting.order')}\r\n        >\r\n          <ToggleButton value=\"asc\" aria-label={t('sorting.ascendant')}>\r\n            <ArrowUpwardIcon fontSize=\"small\" />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"desc\" aria-label={t('sorting.descendant')}>\r\n            <ArrowDownwardIcon fontSize=\"small\" />\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport dayjs, { Dayjs } from 'dayjs';\r\nimport { FilterField }   from '../FilterField';\r\nimport { FilterSelect }  from '../FilterSelect';\r\nimport { FilterRadios }  from '../FilterRadios';\r\nimport { SortControl }   from '../SortControl';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface ProductsFiltersProps {\r\n  filters: {\r\n    name: string;\r\n    category: string;\r\n    location: string;\r\n    date: string;\r\n    places: number;\r\n    sortBy: 'name' | 'price' | 'date';\r\n    order: 'asc' | 'desc';\r\n    perPage: number;\r\n    page: number;\r\n  };\r\n  onChange: (newFilters: Partial<ProductsFiltersProps['filters']>) => void;\r\n}\r\n\r\nexport function ProductsFilters({\r\n  filters,\r\n  onChange,\r\n}: ProductsFiltersProps) {\r\n  const { t } = useTranslation('ticket');\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Liste des champs de tri pour le SortControl\r\n  const sortFields = [\r\n    { value: 'name' as const,  label: t('filters.name') },\r\n    { value: 'price' as const, label: t('filters.price') },\r\n    { value: 'date' as const,  label: t('filters.date') },\r\n  ];\r\n\r\n  const content = (\r\n    <Box sx={{ width: 260, py: 2, px: 1 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {t('filters.title')}\r\n      </Typography>\r\n      <Stack spacing={2} sx={{ mx: 1 }}>\r\n        {/* Nom */}\r\n        <FilterField\r\n          label={t('filters.name')}\r\n          value={filters.name}\r\n          onChange={v => onChange({ name:v, page:1 })}\r\n        />\r\n\r\n        {/* Catégorie */}\r\n        <FilterField\r\n          label={t('filters.category')}\r\n          value={filters.category}\r\n          onChange={v => onChange({ category:v, page:1})}\r\n        />\r\n\r\n        {/* Lieu */}\r\n        <FilterField\r\n          label={t('filters.location')}\r\n          value={filters.location}\r\n          onChange={v => onChange({ location:v, page:1})}\r\n        />\r\n\r\n        {/* Date */}\r\n        <DatePicker\r\n          label={t('filters.date')}\r\n          value={filters.date ? dayjs(filters.date) : null}\r\n          onChange={(newVal: Dayjs | null) =>\r\n            onChange({ date: newVal?.format('YYYY-MM-DD') || '', page: 1 })\r\n          }\r\n          slotProps={{\r\n            textField: {\r\n              size: 'small',\r\n              fullWidth: true,\r\n              InputLabelProps: { shrink: true },\r\n            },\r\n          }}\r\n        />\r\n\r\n        {/* Places (radio) */}\r\n        <FilterRadios\r\n          legend={t('filters.places')}\r\n          value={filters.places.toString()}\r\n          options={[\r\n            {value:'0', label:t('filters.all_places')},\r\n            {value:'1', label:t('filters.one_place')},\r\n            {value:'2', label:t('filters.two_places')},\r\n            {value:'4', label:t('filters.four_places')},\r\n          ]}\r\n          onChange={v=> onChange({ places:Number(v), page:1 })}\r\n        />\r\n\r\n        {/* Tri (SortControl générique) */}\r\n        <SortControl\r\n          fields={sortFields}\r\n          sortBy={filters.sortBy}\r\n          order={filters.order}\r\n          onSortChange={(newField, newOrder) =>\r\n            onChange({ sortBy: newField, order: newOrder, page: 1 })\r\n          }\r\n          label={t('filters.sort_by')}\r\n        />\r\n\r\n        {/* Offres par page */}\r\n        <FilterSelect\r\n          label={t('filters.offers_per_page')}\r\n          value={filters.perPage}\r\n          options={[1,5,10,15,25,50,100]}\r\n          onChange={v=>onChange({ perPage:v, page:1 })}\r\n        />\r\n\r\n        {/* Réinitialiser */}\r\n        <Button\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onClick={() =>\r\n            onChange({\r\n              name: '',\r\n              category: '',\r\n              location: '',\r\n              date: '',\r\n              places: 0,\r\n              sortBy: 'name',\r\n              order: 'asc',\r\n              perPage: 15,\r\n              page: 1,\r\n            })\r\n          }\r\n        >\r\n          {t('filters.reset')}\r\n        </Button>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Sidebar desktop */}\r\n      <Box\r\n        component=\"aside\"\r\n        sx={{\r\n          display: { xs: 'none', md: 'block' },\r\n          position: 'sticky',\r\n          top: theme.mixins.toolbar.minHeight,\r\n          bgcolor: 'background.paper',\r\n          border: t => `1px solid ${t.palette.divider}`,\r\n          borderRadius: 1,\r\n          width: 260,\r\n        }}\r\n      >\r\n        {content}\r\n      </Box>\r\n\r\n      {/* Drawer mobile */}\r\n      <Box sx={{ display: { xs: 'block', md: 'none' }, mb: 2 }}>\r\n        <IconButton onClick={() => setOpen(true)} aria-label={t('filters.title')}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Drawer open={open} onClose={() => setOpen(false)} keepMounted>\r\n          <Box sx={{ position: 'relative' }}>\r\n            <IconButton\r\n              onClick={() => setOpen(false)}\r\n              size=\"small\"\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 8,\r\n                right: 8,\r\n              }}\r\n              aria-label={t('filters.close')}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            {content}\r\n          </Box>\r\n        </Drawer>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\n","import Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport type { Product } from '../../types/products';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Props { \r\n  product: Product; \r\n  fmtCur: (n:number)=>string; \r\n  fmtDate:(s?:string)=>string; \r\n  onViewDetails: (id: number) => void;\r\n}\r\n\r\nexport function ProductCard({ product: p, fmtCur, fmtDate, onViewDetails }: Props) {\r\n  const { t } = useTranslation(['common', 'ticket']);\r\n  const soldOut = p.stock_quantity === 0;\r\n  const finalPrice = p.price * (1 - p.sale);\r\n\r\n  return (\r\n    <Box sx={{ flex: { xs: '1 1 calc(33% - 32px)', md: '1 1 100%' }, minWidth: { xs: 280, md: 'auto' }, maxWidth: { xs: 320, md: '100%' } }}>\r\n      <Card sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, alignItems: { xs: 'stretch', md: 'center' }, p: 2, gap: 1 }}>\r\n        <CardMedia component=\"img\" image={p.product_details.image} alt={p.name} loading=\"lazy\" sx={{ width: { xs: '100%' , md: 320 }, height: 180, objectFit: 'cover', alignSelf: { xs: 'auto', md: 'center' } }} />\r\n        <CardContent sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h6\">{p.name}</Typography>\r\n          <Typography variant=\"body2\">\r\n            {fmtDate(p.product_details.date)}{p.product_details.time && ` – ${p.product_details.time}`}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n            {p.product_details.location}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {t('ticket:tickets.places', { count: p.product_details.places })}\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', alignItems: 'baseline', gap: 1 , mt: 1 }}>\r\n            {p.sale > 0 && (\r\n              <Typography variant=\"body2\" sx={{ textDecoration: 'line-through' }}>\r\n                {fmtCur(p.price)}\r\n              </Typography>\r\n            )}\r\n            <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n              {fmtCur(finalPrice)}\r\n            </Typography>\r\n            {p.sale > 0 && <Chip label={`–${Math.round(p.sale*100)}%`} size=\"small\" />}\r\n          </Box>\r\n          <Typography variant=\"body2\" color={soldOut ? 'error.main' : 'text.secondary'} sx={{ mt:1 }}>\r\n            { soldOut ? t('ticket:tickets.out_of_stock') : t('ticket:tickets.available', {count: p.stock_quantity}) }\r\n          </Typography>\r\n        </CardContent>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: { xs: 'row', md: 'column' },\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            gap: 1,\r\n            '& .MuiButton-root': {\r\n              whiteSpace: 'nowrap'\r\n            }\r\n          }}\r\n        >\r\n          <Button size=\"small\" variant=\"outlined\" onClick={() => onViewDetails(p.id)}>\r\n            {t('ticket:tickets.more_info')}\r\n          </Button>\r\n          <Button size=\"small\" variant=\"contained\" disabled={soldOut} href={`/tickets/${p.id}`}>\r\n            {soldOut ? t('ticket:tickets.out_of_stock') : t('ticket:tickets.buy')}\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}","import type { Product } from '../../types/products';\r\nimport { ProductCard } from '../ProductCard';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface Props {\r\n  products: Product[];\r\n  fmtCur: (n:number)=>string;\r\n  fmtDate: (s?:string)=>string;\r\n  onViewDetails: (id: number) => void;\r\n}\r\n\r\nexport function ProductGrid({ products, fmtCur, fmtDate, onViewDetails }: Props) {\r\n  const { t } = useTranslation('ticket');\r\n  if (products.length === 0) {\r\n    return <Typography variant='h4' sx={{ textAlign: 'center' }}>{t('tickets.not_found')}</Typography>;\r\n  }\r\n  return (\r\n    <Box sx={{ display: 'flex', gap: 4, justifyContent: { xs: 'center', md: 'flex-start' }, flexWrap: { xs: 'wrap', md: 'nowrap' }, flexDirection: { xs: 'row', md: 'column' }}}>\r\n      {products.map(p => (\r\n        <ProductCard key={p.id} product={p} fmtCur={fmtCur} fmtDate={fmtDate} onViewDetails={onViewDetails} />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n","export const API_BASE_URL = import.meta.env.VITE_API_BASE_URL as string;","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport type { Product } from '../types/products';\r\nimport { API_BASE_URL } from '../config';\r\n\r\nexport interface Filters {\r\n  name: string;\r\n  category: string;\r\n  location: string;\r\n  date: string;\r\n  places: number;\r\n  sortBy: 'name' | 'price' | 'date';\r\n  order: 'asc' | 'desc';\r\n  perPage: number;\r\n  page: number;\r\n}\r\n\r\nexport function useProducts(filters: Filters, lang: string) {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string|null>(null);\r\n  const [validationErrors, setValidationErrors] = useState<Record<string,string[]> | null>(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setValidationErrors(null);\r\n\r\n    // Mapping interne entre notre enum \"sortBy\" et la clé API\r\n    const sortMap: Record<Filters['sortBy'], string> = {\r\n      name:  'name',\r\n      price: 'price',\r\n      date:  'product_details->date',\r\n    };\r\n\r\n    const apiSort = sortMap[filters.sortBy];\r\n\r\n    const params: Record<string, any> = {\r\n      per_page: Math.max(1, filters.perPage),\r\n      page: filters.page,\r\n      sort_by: apiSort,\r\n      order: filters.order,\r\n      ...(filters.name     && { name:     filters.name     }),\r\n      ...(filters.category && { category: filters.category }),\r\n      ...(filters.location && { location: filters.location }),\r\n      ...(filters.date     && { date:     filters.date     }),\r\n      ...(filters.places > 0 && { places: filters.places }),\r\n    };\r\n\r\n    axios.get(`${API_BASE_URL}/api/products`, { params, headers: { 'Accept-Language': lang } })\r\n      .then(res => {\r\n        setProducts(res.data.data);\r\n        setTotal(res.data.pagination.total);\r\n      })\r\n      .catch(err => {\r\n        if (axios.isAxiosError(err)) {\r\n          const status = err.response?.status;\r\n          if (status === 422) {\r\n          setValidationErrors(err.response!.data.errors as Record<string,string[]>);\r\n          return;\r\n        }\r\n        if (status === 404) {\r\n          setProducts([]);\r\n          setTotal(0);\r\n          return;\r\n        }\r\n      }\r\n      setError(err.code);\r\n    })\r\n    .finally(() => setLoading(false));\r\n  }, [filters, lang]);\r\n\r\n  return { products, total, loading, error, validationErrors };\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport type { Product } from '../types/products';\r\nimport { API_BASE_URL } from '../config';\r\n\r\nexport interface UseProductDetailsReturn {\r\n  product: Product | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nexport function useProductDetails(\r\n  productId: number | null,\r\n  lang: string\r\n): UseProductDetailsReturn {\r\n  const [product, setProduct] = useState<Product | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (productId == null) {\r\n      setProduct(null);\r\n      setError(null);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setProduct(null);\r\n\r\n    axios\r\n      .get<{ data: Product }>(\r\n        `${API_BASE_URL}/api/products/${productId}`,\r\n        {\r\n          headers: { 'Accept-Language': lang },\r\n        }\r\n      )\r\n      .then(res => {\r\n        setProduct(res.data.data);\r\n      })\r\n      .catch(err => {\r\n        const msg =\r\n          axios.isAxiosError(err) && err.response?.data?.message\r\n            ? err.response.data.message\r\n            : err.message;\r\n        setError(msg);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [productId, lang]);\r\n\r\n  return { product, loading, error };\r\n}\r\n","import Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n\r\ninterface ErrorDisplayProps {\r\n  title: string;\r\n  message: string;\r\n  showRetry?: boolean;\r\n  retryButtonText?: string;\r\n  onRetry?: () => void;\r\n  showHome?: boolean;\r\n  homeButtonText?: string;\r\n}\r\n\r\nexport function ErrorDisplay({\r\n  title,\r\n  message,\r\n  showRetry = true,\r\n  retryButtonText,\r\n  onRetry,\r\n  showHome = true,\r\n  homeButtonText,\r\n}: ErrorDisplayProps) {\r\n  return (\r\n    <Box sx={{ p: 4, textAlign: 'center' }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n        {message}\r\n      </Typography>\r\n      {showRetry && (\r\n        <Button variant=\"text\" onClick={onRetry}>\r\n          {retryButtonText}\r\n        </Button>\r\n      )}\r\n      {showHome && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => (window.location.href = '/')}\r\n          sx={{ ml: 2 }}\r\n        >\r\n          {homeButtonText}\r\n        </Button>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","export function formatCurrency(value: number, locale = 'en', currency = 'EUR') {\r\n  return new Intl.NumberFormat(locale, { style: 'currency', currency }).format(value);\r\n}\r\n\r\nexport function formatDate(\r\n  isoDate?: string,\r\n  locale = 'en',\r\n  options: Intl.DateTimeFormatOptions = { day: 'numeric', month: 'long', year: 'numeric' }\r\n) {\r\n  if (!isoDate) return '';\r\n  const d = new Date(isoDate);\r\n  if (isNaN(d.getTime())) return '';\r\n  return new Intl.DateTimeFormat(locale, options).format(d);\r\n}\r\n","import Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport { useProductDetails } from '../../hooks/useProductDetails';\r\nimport OlympicLoader from './../OlympicLoader';\r\nimport { ErrorDisplay } from '../ErrorDisplay';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { formatCurrency, formatDate } from '../../utils/format';\r\nimport Chip from '@mui/material/Chip';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  productId: number | null;\r\n  lang: string;\r\n  onClose: () => void;\r\n}\r\n\r\nexport function ProductDetailsModal({ open, productId, lang, onClose }: Props) {\r\n  const { t } = useTranslation('ticket');\r\n\r\n  const { product, loading, error } = useProductDetails(open ? productId : null, lang);\r\n\r\n  const fmtCur = (v: number)   => formatCurrency(v, lang, 'EUR');\r\n  const dateStr  = product ? formatDate(product.product_details.date, lang) : '';\r\n\r\n  const soldOut = product?.stock_quantity === 0;\r\n  const finalPrice = (product?.price ?? 0) * (1 - (product?.sale ?? 0));\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>\r\n        {loading ? t('tickets.loading') : error ? t('tickets.error') : product?.name}\r\n      </DialogTitle>\r\n\r\n      <DialogContent dividers>\r\n        {loading && (\r\n          <Box sx={{ textAlign: 'center', py: 4 }}>\r\n            <OlympicLoader />\r\n          </Box>\r\n        )}\r\n\r\n        {error && (\r\n          <ErrorDisplay title={t('errors.title')} message={t('errors.not_found')} showRetry={false} showHome={false} />\r\n        )}\r\n\r\n        {product && (\r\n          <Box component=\"div\">\r\n            <Box\r\n              component=\"img\"\r\n              src={product.product_details.image}\r\n              alt={product.name}\r\n              loading=\"lazy\"\r\n              sx={{ width: '100%', height: 200, objectFit: 'cover', mb: 2 }}\r\n            />\r\n\r\n            <Typography variant=\"body1\">\r\n              {dateStr}{product.product_details.time && ` – ${product.product_details.time}`}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n              {product.product_details.location}\r\n            </Typography>\r\n\r\n            <Typography variant='body2' color=\"text.secondary\" sx={{ mb: 1 }}>\r\n              {t('tickets.category', { category: product.product_details.category })}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              {product.product_details.description}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              {t('tickets.places', { count: product.product_details.places })}\r\n            </Typography>\r\n\r\n            <Box sx={{ display: 'flex', alignItems: 'baseline', gap: 1 , mt: 1 }}>\r\n              {product.sale > 0 && (\r\n                <Typography variant=\"body2\" sx={{ textDecoration: 'line-through' }}>\r\n                  {fmtCur(product.price)}\r\n                </Typography>\r\n              )}\r\n              <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                {fmtCur(finalPrice)}\r\n              </Typography>\r\n              {product.sale > 0 && <Chip label={`–${Math.round(product.sale*100)}%`} size=\"small\" />}\r\n            </Box>\r\n            <Typography variant=\"body2\" color={soldOut ? 'error.main' : 'text.secondary'} sx={{ mt:1 }}>\r\n              { soldOut ? t('tickets.out_of_stock') : t('tickets.available', {count: product.stock_quantity}) }\r\n            </Typography>\r\n            </Box>\r\n        )}\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={onClose}>{t('tickets.close')}</Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={product?.stock_quantity === 0 || loading || !!error}\r\n          href={`/tickets/${productId}`}\r\n        >\r\n          {soldOut ? t('tickets.out_of_stock') : t('tickets.buy')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport OlympicLoader from '../components/OlympicLoader';\r\nimport Seo from '../components/Seo';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Typography from '@mui/material/Typography';\r\nimport { ProductsFilters } from '../components/ProductsFilters';\r\nimport { ProductGrid } from '../components/ProductGrid';\r\nimport { useLanguageStore } from '../stores/useLanguageStore';\r\nimport type { Filters } from '../hooks/useProducts';\r\nimport { useProducts } from '../hooks/useProducts';\r\nimport { PageWrapper } from '../components/PageWrapper';\r\nimport { ProductDetailsModal } from '../components/ProductDetailsModal';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ErrorDisplay } from '../components/ErrorDisplay';\r\nimport { formatCurrency, formatDate } from '../utils/format';\r\n\r\nexport default function ProductsPage() {\r\n  const { t } = useTranslation('ticket');\r\n  const lang = useLanguageStore(s => s.lang);\r\n\r\n  // --- États ---\r\n  const [filters, setFilters] = useState<Filters>({\r\n    name:'', category:'', location:'', date:'', places:0,\r\n    sortBy:'name', order:'asc', perPage:15, page:1,\r\n  });\r\n\r\n  const { products, total, loading, error, validationErrors } = useProducts(filters, lang);\r\n\r\n  const [detailsId, setDetailsId] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n  if (validationErrors) {\r\n    const cleanup: Partial<Filters> = {};\r\n\r\n    if (validationErrors.sort_by)   { cleanup.sortBy = 'name'; cleanup.order = 'asc'; }\r\n    if (validationErrors.date)      { cleanup.date   = ''; }\r\n    if (validationErrors.name)      { cleanup.name   = ''; }\r\n    if (validationErrors.category)  { cleanup.category = ''; }\r\n    if (validationErrors.location)  { cleanup.location = ''; }\r\n    if (validationErrors.places)    { cleanup.places = 0; }\r\n\r\n    setFilters(f => ({ ...f, ...cleanup }));\r\n  }\r\n}, [validationErrors]);\r\n\r\n  // --- Helpers de format ---\r\n  const fmtCur = (v: number)   => formatCurrency(v, lang, 'EUR');\r\n\r\n  const fmtDate = (iso?: string) => formatDate(iso, lang);\r\n\r\n  if (error) {\r\n    return (\r\n      <ErrorDisplay\r\n        title={t('errors.title')}\r\n        message={t('errors.unexpected')}\r\n        showRetry\r\n        retryButtonText={t('errors.retry')}\r\n        onRetry={() => setFilters(f => ({ ...f }))}\r\n        showHome\r\n        homeButtonText={t('errors.home')}\r\n      />\r\n  );\r\n}\r\n  \r\n  // --- Rendu normal loader / grille / pagination ---\r\n  return (\r\n    <>\r\n      <Seo title={t('tickets.seo_title')} description={t('tickets.seo_description')} />\r\n      <PageWrapper disableCard>\r\n        <Typography variant=\"h4\" sx={{ px:2 }}>\r\n          {t('tickets.title')}\r\n        </Typography>\r\n        <Box sx={{ display:'flex', flexDirection:{ xs:'column', md:'row' }, gap:2, p:2 }}>\r\n          {/* Sidebar filtres */}\r\n          <ProductsFilters filters={filters} onChange={upd=>setFilters(f=>({...f,...upd}))}/>\r\n\r\n          {/* Contenu principal */}\r\n          <Box component=\"main\" flex={1}>\r\n            {loading\r\n              ? <Box textAlign=\"center\" py={8}><OlympicLoader/></Box>\r\n              : <ProductGrid products={products} fmtCur={fmtCur} fmtDate={fmtDate} onViewDetails={setDetailsId} />}\r\n            {!loading && products.length>0 && (\r\n              <Box textAlign=\"center\" mt={4}>\r\n                <Pagination\r\n                  count={Math.ceil(total/filters.perPage)||1}\r\n                  page={filters.page}\r\n                  onChange={(_,p)=>setFilters(f=>({...f,page:p}))}\r\n                />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </PageWrapper>\r\n\r\n      <ProductDetailsModal\r\n        open={detailsId !== null}\r\n        productId={detailsId}\r\n        lang={lang}\r\n        onClose={() => setDetailsId(null)}\r\n      />\r\n    </>\r\n  );\r\n}"],"names":["jsx","jsxs","label","useState","Fragment","t","useEffect"],"mappings":"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"}