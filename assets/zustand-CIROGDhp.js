import{R as _}from"./react-C0aVURRx.js";const H=r=>{let s;const t=new Set,o=(i,g)=>{const v=typeof i=="function"?i(s):i;if(!Object.is(v,s)){const S=s;s=g??(typeof v!="object"||v===null)?v:Object.assign({},s,v),t.forEach(m=>m(s,S))}},a=()=>s,u={setState:o,getState:a,getInitialState:()=>d,subscribe:i=>(t.add(i),()=>t.delete(i))},d=s=r(o,a,u);return u},R=r=>r?H(r):H,j=r=>r;function w(r,s=j){const t=_.useSyncExternalStore(r.subscribe,()=>s(r.getState()),()=>s(r.getInitialState()));return _.useDebugValue(t),t}const E=r=>{const s=R(r),t=o=>w(s,o);return Object.assign(t,s),t},N=r=>E;function x(r,s){let t;try{t=r()}catch{return}return{getItem:a=>{var n;const f=d=>d===null?null:JSON.parse(d,void 0),u=(n=t.getItem(a))!=null?n:null;return u instanceof Promise?u.then(f):f(u)},setItem:(a,n)=>t.setItem(a,JSON.stringify(n,void 0)),removeItem:a=>t.removeItem(a)}}const b=r=>s=>{try{const t=r(s);return t instanceof Promise?t:{then(o){return b(o)(t)},catch(o){return this}}}catch(t){return{then(o){return this},catch(o){return b(o)(t)}}}},F=(r,s)=>(t,o,a)=>{let n={storage:x(()=>localStorage),partialize:e=>e,version:0,merge:(e,h)=>({...h,...e}),...s},f=!1;const u=new Set,d=new Set;let i=n.storage;if(!i)return r((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${n.name}', the given storage is currently unavailable.`),t(...e)},o,a);const g=()=>{const e=n.partialize({...o()});return i.setItem(n.name,{state:e,version:n.version})},v=a.setState;a.setState=(e,h)=>{v(e,h),g()};const S=r((...e)=>{t(...e),g()},o,a);a.getInitialState=()=>S;let m;const I=()=>{var e,h;if(!i)return;f=!1,u.forEach(c=>{var l;return c((l=o())!=null?l:S)});const y=((h=n.onRehydrateStorage)==null?void 0:h.call(n,(e=o())!=null?e:S))||void 0;return b(i.getItem.bind(i))(n.name).then(c=>{if(c)if(typeof c.version=="number"&&c.version!==n.version){if(n.migrate){const l=n.migrate(c.state,c.version);return l instanceof Promise?l.then(p=>[!0,p]):[!0,l]}console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return[!1,c.state];return[!1,void 0]}).then(c=>{var l;const[p,O]=c;if(m=n.merge(O,(l=o())!=null?l:S),t(m,!0),p)return g()}).then(()=>{y==null||y(m,void 0),m=o(),f=!0,d.forEach(c=>c(m))}).catch(c=>{y==null||y(void 0,c)})};return a.persist={setOptions:e=>{n={...n,...e},e.storage&&(i=e.storage)},clearStorage:()=>{i==null||i.removeItem(n.name)},getOptions:()=>n,rehydrate:()=>I(),hasHydrated:()=>f,onHydrate:e=>(u.add(e),()=>{u.delete(e)}),onFinishHydration:e=>(d.add(e),()=>{d.delete(e)})},n.skipHydration||I(),m||S},P=F;export{x as a,N as c,P as p};
